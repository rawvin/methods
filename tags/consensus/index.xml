<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Consensus on Methods</title><link>https://cloudnativemethods.com/tags/consensus/</link><description>Recent content in Consensus on Methods</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Sep 2020 21:10:59 -0500</lastBuildDate><atom:link href="https://cloudnativemethods.com/tags/consensus/index.xml" rel="self" type="application/rss+xml"/><item><title>Consistency Algorithms</title><link>https://cloudnativemethods.com/consensus/</link><pubDate>Sun, 13 Sep 2020 21:10:59 -0500</pubDate><guid>https://cloudnativemethods.com/consensus/</guid><description>When dealing with distributed database architectures in geo-replicated deployments, systems have to implement algorithms to ensure that they make the correct decision even if one or more processes have failed.
Here I&amp;rsquo;ve listed two of the popular approaches to achieving consistency.
Consensus (Raft) Raft is a leader-based consensus algorithm which guarantees strong consistency to the cluster. The consensus algorithm is divided into three parts - Leader election, Replication and Safety. Raft, compared to Paxos its predecessor, makes it easy to reason about the database in the single key context.</description></item></channel></rss>